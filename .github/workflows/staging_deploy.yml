name: "Terraform - Staging"
# https://gaunacode.com/deploying-terraform-at-scale-with-github-actions
on:
  push:
    branches:
      - dev
    paths:
      - networks/**

  pull_request:
    branches:
      - staging
    paths:
      - networks/**

jobs:
  terraform_network:
    name: "Terraform Network"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    environment: staging

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Change to Network Directory
        run: cd terraform/networks

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false

  terraform_webserver:
    name: "Terraform Webserver"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    needs: terraform_network
    if: success('Terraform Network')
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Change to Webserver Directory
        run: cd terraform/webservers

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
